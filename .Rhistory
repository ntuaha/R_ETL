ggplot(Bank_ABT_M, aes(time, mortage_total_bal)) +
geom_point(aes(size=2,col=mortage_total_cnt), alpha = 1/2) +
geom_smooth(method="loess") +
scale_size_area()
#挑選出GDP的欄位
GDP_Y = group_by(GDP,year)
GDP_Y2 = summarise(GDP_Y,GDP = sum(GDP, na.rm = TRUE))
GDP1 = select(mutate(GDP_Y2 , time = as.POSIXct(paste(year,'1','1',sep='-'))),time,GDP)
#匯總資料
ABT = left_join (GDP1,Bank_ABT_M,by="time")
see1 = filter(mutate(ABT,ratio =mortage_total_bal/GDP),is.na(ratio)==FALSE)
ggplot(see1, aes(time, ratio)) +
geom_point(aes(size = mortage_total_cnt), alpha = 1/2) +
geom_smooth(method="loess") +
scale_size_area()
install.packages("ggplot2")
install.packages("dplyr")
install.packages("xts")
library(gdata)
library(dplyr)
library(xts)
#記得製造沒有總計的資料
MD = read.table(file='/Volumes/AhaStorage/Project/R_ETL/data/md_bal.csv',sep=",",stringsAsFactors=F,header=T)
MD= mutate(MD,time = as.POSIXct(data_dt))
MD1 = filter(MD,bank_nm=="總計")
MD2 = filter(MD,bank_nm!="總計")
str(MD)
#為了貸款資訊  無用
#Ln = read.table(file='/Volumes/AhaStorage/Project/R_ETL/ln_aum.csv',sep=",",stringsAsFactors=F,header=T)
#str(Ln)
#Ln= mutate(Ln,time = as.POSIXct(data_dt))
#Ln1 = filter(Ln,bank_nm=="總計")
# for 房貸資訊
Cl_info_total = read.table(file='/Volumes/AhaStorage/Project/R_ETL/data/cl_info_total.csv',header=T,sep=",",stringsAsFactors=F)
#Cl_info_total$etl_dt <- strptime(Cl_info_total$etl_dt, "%Y-%m-%d")
Cl_info_total = mutate(Cl_info_total,etl_dt=as.POSIXct(etl_dt),data_dt=as.POSIXct(data_dt),bank_code = as.factor(bank_code))
str(Cl_info_total)
View(Cl_info)
View(Cl_info_total)
#install.packages("ggplot2")
#install.packages("dplyr")
#install.packages("xts")
library(dplyr)
library(xts)
library(ggplot2)
# group by
MD3 = group_by(MD2,time)
MD4 = summarise(MD3,md_total = sum(md, na.rm = TRUE),cnt = n())
#MD5 = as.data.frame(cbind(MD4$time,MD4$md_total,MD1$md))
#MD6 = mutate(MD5,diff = V3 - V2)
ggplot(MD4, aes(time, md_total)) +
geom_point(aes(size = cnt), alpha = 1/2) +
geom_smooth(method="loess") +
scale_size_area()
str(MD4)
#str(MD5)
#Cl_info
#group by
Cl_info = mutate(Cl_info,time=data_dt)
Cl_info2 = group_by(Cl_info,time)
Cl_info3 = summarise(Cl_info2,mortage_total_bal = sum(mortgage_bal, na.rm = TRUE),mortage_total_cnt = sum(mortgage_cnt,no.ra=TRUE))
#left join
Bank_ABT_M = left_join(Cl_info3,MD4,by="time")
ggplot(Bank_ABT_M, aes(time, mortage_total_bal)) +
geom_point(aes(size=2,col=mortage_total_cnt), alpha = 1/2) +
geom_smooth(method="loess") +
scale_size_area()
#挑選出GDP的欄位
GDP_Y = group_by(GDP,year)
GDP_Y2 = summarise(GDP_Y,GDP = sum(GDP, na.rm = TRUE))
GDP1 = select(mutate(GDP_Y2 , time = as.POSIXct(paste(year,'1','1',sep='-'))),time,GDP)
#匯總資料
ABT = left_join (GDP1,Bank_ABT_M,by="time")
see1 = filter(mutate(ABT,ratio =mortage_total_bal/GDP),is.na(ratio)==FALSE)
ggplot(see1, aes(time, ratio)) +
geom_point(aes(size = mortage_total_cnt), alpha = 1/2) +
geom_smooth(method="loess") +
scale_size_area()
#GDP
GDP = read.table(file='/Volumes/AhaStorage/Project/R_ETL/data/GDP.txt',sep=",",stringsAsFactors=F,header=F)
#加上列編號
y=as.integer(row.names(GDP))
#View(GDP)
GDP = cbind(GDP,y)
#View(GDP)
#去除不必要的列
GDP = subset(GDP,y>=5 & y<=136)
#GDP = GDP[y>=5 & y<136,]
#上名字
colnames(GDP) = c("time","GDP","GDP_yoy","GDP_2006","GDP_2006_yoy","GDP_minus","GDP_minus_yoy","row_no")
#格式轉換
#去除中間不合理的,在數字欄位上與補上百萬
#a = gsub(",", "",GDP$GDP)
GDP$GDP=as.integer(gsub(",", "",GDP$GDP))*1000000
GDP$GDP_2006=as.numeric(gsub(",", "",GDP$GDP_2006))*1000000
GDP$GDP <- as.numeric(GDP$GDP)
GDP$GDP_yoy <- as.numeric(GDP$GDP_yoy)
GDP$GDP_2006_yoy <- as.numeric(GDP$GDP_2006_yoy)
GDP$GDP_minus <- as.numeric(GDP$GDP_minus)*1000000
GDP$GDP_minus_yoy <- as.numeric(GDP$GDP_minus_yoy)
#增加額外的欄位
year=as.numeric(substr(GDP$time,0,4))
season = as.numeric(substr(GDP$time,6,6))
GDP = cbind(GDP,year,season)
str(GDP)
View(GDP)
#清除不要的欄位
GDP$time = NULL
GDP$row_no = NULL
View(GDP)
library(dplyr)
Cl_info = read.table(file='/Volumes/AhaStorage/Project/R_ETL/data/cl_info_other.csv',header=T,sep=",",stringsAsFactors=F)
#Cl_info$etl_dt <- strptime(Cl_info$etl_dt, "%Y-%m-%d")
#Cl_info$data_dt <- strptime(Cl_info$data_dt, "%Y-%m-%d")
#Cl_info$bank_code <- as.factor(Cl_info$bank_code)
Cl_info = mutate(Cl_info,data_dt = as.POSIXct(data_dt),bank_code = as.factor(bank_code),etl_dt = as.POSIXct(etl_dt))
str(Cl_info)
library(gdata)
library(dplyr)
library(xts)
Currency = read.xls("/Volumes/AhaStorage/Project/R_ETL/data/CB_Currency.xlsx", sheet=1,stringsAsFactors=F,header=F)
# SQL: select
Currency = select(Currency,V1,V10,V11,V14,V15,V18,V19)
colnames(Currency) = c("time","M1A","M1A_yoy","M1B","M1B_yoy","M2","M2_yoy")
y=as.integer(row.names(Currency))
Currency = cbind(Currency,y)
#View(GDP)
#去除不必要的列
Currency = subset(Currency,y>=5 & y<=637)
#SQL: where
Currency = filter(Currency,M1A_yoy!='-'&M2_yoy!='-'&M1B_yoy!='-')
#SQL: select & format
Currency = mutate(Currency,year = as.numeric(substr(Currency$time,0,4)),month=as.numeric(substr(Currency$time,6,7)))
#year=as.numeric(substr(Currency$time,0,4))
#month = as.numeric(substr(Currency$time,6,7))
#Currency = cbind(Currency,year,month)
#SQL: select & format
Currency = mutate(Currency,M1A = as.integer(M1A)*100000,M1A_yoy = as.numeric(M1A_yoy))
Currency = mutate(Currency,M1B = as.integer(M1B)*100000,M1B_yoy = as.numeric(M1B_yoy),M2 = as.integer(M2)*100000,M2_yoy = as.numeric(M2_yoy))
#Currency = mutate(Currency,time = as.yearmon(paste(year,month,sep='-')))
#Currency_xts  = as.xts(as.matrix(Currency),order.by=Currency$time)
#str(Currency$time)
library(gdata)
library(dplyr)
library(xts)
#記得製造沒有總計的資料
MD = read.table(file='/Volumes/AhaStorage/Project/R_ETL/data/md_bal.csv',sep=",",stringsAsFactors=F,header=T)
MD= mutate(MD,time = as.POSIXct(data_dt))
MD1 = filter(MD,bank_nm=="總計")
MD2 = filter(MD,bank_nm!="總計")
str(MD)
#為了貸款資訊  無用
#Ln = read.table(file='/Volumes/AhaStorage/Project/R_ETL/ln_aum.csv',sep=",",stringsAsFactors=F,header=T)
#str(Ln)
#Ln= mutate(Ln,time = as.POSIXct(data_dt))
#Ln1 = filter(Ln,bank_nm=="總計")
# for 房貸資訊
Cl_info_total = read.table(file='/Volumes/AhaStorage/Project/R_ETL/data/cl_info_total.csv',header=T,sep=",",stringsAsFactors=F)
#Cl_info_total$etl_dt <- strptime(Cl_info_total$etl_dt, "%Y-%m-%d")
Cl_info_total = mutate(Cl_info_total,etl_dt=as.POSIXct(etl_dt),data_dt=as.POSIXct(data_dt),bank_code = as.factor(bank_code))
str(Cl_info_total)
#install.packages("ggplot2")
#install.packages("dplyr")
#install.packages("xts")
library(dplyr)
library(xts)
library(ggplot2)
# group by
MD3 = group_by(MD2,time)
MD4 = summarise(MD3,md_total = sum(md, na.rm = TRUE),cnt = n())
#MD5 = as.data.frame(cbind(MD4$time,MD4$md_total,MD1$md))
#MD6 = mutate(MD5,diff = V3 - V2)
ggplot(MD4, aes(time, md_total)) +
geom_point(aes(size = cnt), alpha = 1/2) +
geom_smooth(method="loess") +
scale_size_area()
str(MD4)
#str(MD5)
#Cl_info
#group by
Cl_info = mutate(Cl_info,time=data_dt)
Cl_info2 = group_by(Cl_info,time)
Cl_info3 = summarise(Cl_info2,mortage_total_bal = sum(mortgage_bal, na.rm = TRUE),mortage_total_cnt = sum(mortgage_cnt,no.ra=TRUE))
#left join
Bank_ABT_M = left_join(Cl_info3,MD4,by="time")
ggplot(Bank_ABT_M, aes(time, mortage_total_bal)) +
geom_point(aes(size=2,col=mortage_total_cnt), alpha = 1/2) +
geom_smooth(method="loess") +
scale_size_area()
#挑選出GDP的欄位
GDP_Y = group_by(GDP,year)
GDP_Y2 = summarise(GDP_Y,GDP = sum(GDP, na.rm = TRUE))
GDP1 = select(mutate(GDP_Y2 , time = as.POSIXct(paste(year,'1','1',sep='-'))),time,GDP)
#匯總資料
ABT = left_join (GDP1,Bank_ABT_M,by="time")
see1 = filter(mutate(ABT,ratio =mortage_total_bal/GDP),is.na(ratio)==FALSE)
ggplot(see1, aes(time, ratio)) +
geom_point(aes(size = mortage_total_cnt), alpha = 1/2) +
geom_smooth(method="loess") +
scale_size_area()
View(Cl_info_total)
View(ABT)
ABT = left_join (ABT,select(Cl_info_total,time,mortgage_cnt,mortgage_bal),by="time")
ABT = left_join (ABT,mutate(select(Cl_info_total,data_dt,mortgage_cnt,mortgage_bal),time=as.POSIXct(data_dt)),by="time")
View(ABT)
see1 = filter(mutate(ABT,ratio =mortage_total_bal/GDP,ratio2 = mortgage_bal/GDP,ratio3 = motgage/md_total),is.na(ratio)==FALSE)
see1 = filter(mutate(ABT,ratio =mortage_total_bal/GDP,ratio2 = mortgage_bal/GDP,ratio3 = mortgage/md_total),is.na(ratio)==FALSE)
see1 = filter(mutate(ABT,ratio =mortage_total_bal/GDP,ratio2 = mortgage_bal/GDP,ratio3 = mortgage_bal/md_total),is.na(ratio)==FALSE)
ggplot(see1, aes(time, ratio2)) +
geom_point(aes(size = mortage_total_cnt), alpha = 1/2) +
geom_smooth(method="loess") +
scale_size_area()
ggplot(see1, aes(time, ratio3)) +
geom_point(aes(size = mortage_total_cnt), alpha = 1/2) +
geom_smooth(method="loess") +
scale_size_area()
ggplot(see1, aes(time, ratio2)) +
geom_point(aes(size = mortage_total_cnt), alpha = 1/2) +
geom_smooth(method="loess") +
scale_size_area()
ggplot(see1, aes(time, ratio)) +
geom_point(aes(size = mortage_total_cnt), alpha = 1/2) +
geom_smooth(method="loess") +
scale_size_area()
ggplot(see1, aes(time, ratio2)) +
geom_point(aes(size = mortage_total_cnt), alpha = 1/2) +
geom_smooth(method="loess") +
scale_size_area()
ggplot(see1, aes(time, ratio)) +
geom_point(aes(size = mortage_total_cnt), alpha = 1/2) +
geom_smooth(method="loess") +
scale_size_area()
ggplot(see1, aes(time, ratio2)) +
geom_point(aes(size = mortage_total_cnt), alpha = 1/2) +
geom_smooth(method="loess") +
scale_size_area()
Correct = read.xls("/Volumes/AhaStorage/Project/TWFS/外存餘額市場報表.xlsx", sheet=1,stringsAsFactors=F,header=F)
library(gdata)
library(dplyr)
library(xts)
Correct = read.xls("/Volumes/AhaStorage/Project/TWFS/外存餘額市場報表.xlsx", sheet=1,stringsAsFactors=F,header=F)
Correct = read.xls("/Volumes/AhaStorage/Project/TWFS/外存餘額市場報表.xlsx", sheet=1,stringsAsFactors=F,header=F)
library(gdata)
install.package("gdata")
install.packages("gdata")
install.packages("dplyr")
install.packages("dplyr")
install.packages("xts")
Correct = read.xls("/Volumes/AhaStorage/Project/TWFS/外存餘額市場報表.xlsx", sheet=1,stringsAsFactors=F,header=F)
library(gdata)
library(dplyr)
library(xts)
Correct = read.xls("/Volumes/AhaStorage/Project/TWFS/外存餘額市場報表.xlsx", sheet=1,stringsAsFactors=F,header=F)
View(Correct)
View(Correct)
Correct = read.xls("/Volumes/AhaStorage/Project/TWFS/外存餘額市場報表.xlsx", sheet=1,stringsAsFactors=F,header=T)
#install.packages("gdata")
#install.packages("dplyr")
#install.packages("xts")
library(gdata)
library(dplyr)
library(xts)
Correct = read.xls("/Volumes/AhaStorage/Project/TWFS/外存餘額市場報表.xlsx", sheet=1,stringsAsFactors=F,header=T)
View(Correct)
str(Correct)
Correct = read.xls("/Volumes/AhaStorage/Project/TWFS/外存餘額市場報表.xlsx", sheet=1,stringsAsFactors=F,header=F)
Y = as.integer(rownames(correct))
Y = as.integer(rownames(Correct))
Correct = cbind(Correct,Y)
Correct = filter(Correct,Y>=2)
View(Correct)
View(Correct)
Correct$Y=NULL
View(Correct)
str(Correct)
Correct = read.xls("/Volumes/AhaStorage/Project/TWFS/外存餘額市場報表.xlsx", sheet=1,stringsAsFactors=F,header=T)
str(Correct)
rownames(Correct) = c("name",paste("V",c(1:15),sep=""))
paste("V",c(1:15),sep="")
Correct = read.xls("/Volumes/AhaStorage/Project/TWFS/外存餘額市場報表.xlsx", sheet=1,stringsAsFactors=F,header=T)
rownames(Correct) = c("name",paste("V",c(1:15),sep=""))
rownames(Correct) = c("name",paste("V",c(1:16),sep=""))
rownames(Correct) = c("name",paste("V",c(1:14),sep=""))
c("name",paste("V",c(1:14),sep=""))
c("name",paste("V",c(1:15),sep=""))
View(Correct)
rownames(Correct) = c("name",paste("V",c(1:16),sep=""))
row.names(Correct) = c("name",paste("V",c(1:16),sep=""))
row.names(Correct) = c("name",paste("V",c(1:15),sep=""))
colnames(Correct) = c("name",paste("V",c(1:15),sep=""))
str(Correct)
Correct = mutate(Correct,V1 = as.integer(V1),V2 = as.integer(V2))
str(Correct)
View(Correct)
Correct = read.xls("/Volumes/AhaStorage/Project/TWFS/外存餘額市場報表.xlsx", sheet=1,stringsAsFactors=F,header=T)
colnames(Correct) = c("name",paste("V",c(1:15),sep=""))
Correct = mutate(Correct,V1 = is.na(as.integer(V1),0),V2 = is.na(as.integer(V2),0))
Correct = mutate(Correct,V1 = ifelse(is.na(as.integer(V1)),0,V1),V2 = ifelse(is.na(as.integer(V2)),0,V2))
Correct = mutate(Correct,V1 = as.integer(V1),V2 = is.na(as.integer(V2),names = names[1:2])
Correct = read.xls("/Volumes/AhaStorage/Project/TWFS/外存餘額市場報表.xlsx", sheet=1,stringsAsFactors=F,header=T)
colnames(Correct) = c("name",paste("V",c(1:15),sep=""))
#Correct = mutate(Correct,V1 = ifelse(is.na(as.integer(V1)),0,V1),V2 = ifelse(is.na(as.integer(V2)),0,V2))
Correct = mutate(Correct,V1 = as.integer(V1),V2 = is.na(as.integer(V2),names = names[1:2])
View(Correct)
Correct = mutate(Correct,V1 = as.integer(V1),V2 = is.na(as.integer(V2),names = names[1:2])
Correct = read.xls("/Volumes/AhaStorage/Project/TWFS/外存餘額市場報表.xlsx", sheet=1,stringsAsFactors=F,header=T)
colnames(Correct) = c("name",paste("V",c(1:15),sep=""))
#Correct = mutate(Correct,V1 = ifelse(is.na(as.integer(V1)),0,V1),V2 = ifelse(is.na(as.integer(V2)),0,V2))
Correct = mutate(Correct,V1 = as.integer(V1),V2 = as.integer(V2),names = names[1:2])
View(Correct)
Correct$names
View(Correct)
Correct = mutate(Correct,V1 = as.integer(V1),V2 = as.integer(V2),name = name[1:2])
View(Correct)
View(Correct)
str(Correct)
Correct = mutate(Correct,V1 = as.integer(ifelse(is.integer(V1),V1,NA),V2 = as.integer(ifelse(is.integer(V2),V2,0),name = name[1:2])
Correct = read.xls("/Volumes/AhaStorage/Project/TWFS/外存餘額市場報表.xlsx", sheet=1,stringsAsFactors=F,header=T)
colnames(Correct) = c("name",paste("V",c(1:15),sep=""))
#Correct = mutate(Correct,V1 = ifelse(is.na(as.integer(V1)),0,V1),V2 = ifelse(is.na(as.integer(V2)),0,V2))
Correct = mutate(Correct,V1 = as.integer(ifelse(is.integer(V1),V1,NA),V2 = as.integer(ifelse(is.integer(V2),V2,0)),name = name[1:2])
Correct = read.xls("/Volumes/AhaStorage/Project/TWFS/外存餘額市場報表.xlsx", sheet=1,stringsAsFactors=F,header=T)
colnames(Correct) = c("name",paste("V",c(1:15),sep=""))
#Correct = mutate(Correct,V1 = ifelse(is.na(as.integer(V1)),0,V1),V2 = ifelse(is.na(as.integer(V2)),0,V2))
Correct = mutate(Correct,V1 = as.integer(ifelse(is.integer(V1),V1,NA)),V2 = as.integer(ifelse(is.integer(V2),V2,0)),name = name[1:2])
Correct = mutate(Correct,name = name[1:2])
Correct = mutate(Correct,V1 = as.integer(V1),V2 = as.integer(V2),name = substr(name,1,2))
Correct = read.xls("/Volumes/AhaStorage/Project/TWFS/外存餘額市場報表.xlsx", sheet=1,stringsAsFactors=F,header=T)
colnames(Correct) = c("name",paste("V",c(1:15),sep=""))
#Correct = mutate(Correct,V1 = ifelse(is.na(as.integer(V1)),0,V1),V2 = ifelse(is.na(as.integer(V2)),0,V2))
Correct = mutate(Correct,V1 = as.integer(V1),V2 = as.integer(V2),name = substr(name,1,2))
View(Correct)
View(Correct)
Correct_1 =filter(Correct,name <> "總")
Correct_1 =filter(Correct,name != "總")
View(Correct_1)
Correct_1 =filter(Correct,name != "總 ")
Correct_1 =filter(Correct,name != "總\t")
Correct_1 =filter(Correct,name != "總　")
Correct = read.xls("/Volumes/AhaStorage/Project/TWFS/外存餘額市場報表.xlsx", sheet=1,stringsAsFactors=F,header=T)
colnames(Correct) = c("name",paste("V",c(1:15),sep=""))
#Correct = mutate(Correct,V1 = ifelse(is.na(as.integer(V1)),0,V1),V2 = ifelse(is.na(as.integer(V2)),0,V2))
Correct = mutate(Correct,V1 = as.integer(V1),V2 = as.integer(V2),name = substr(name,1,2))
Correct_1 =filter(Correct,name != "總　")
View(Correct_1)
S_Correct_1 = summarise(Correct_1,sV1 = V1,sV2 = V2)
S_Correct_1 = summarise(Correct_1,sV1 = sum(V1,na.rm=T),sV2 = sum(V2,na.rm=T))
View(S_Correct_1)
Correct_2 =filter(Correct,name = "總　")
Correct_2 =filter(Correct,name == "總　")
CC  = left_join(Correct_1,Correct_2)
View(Correct_2)
View(Correct_2)
CC  = cbind(Correct_1$sV1,Correct_1$sV2,Correct_2$V1,Correct_2$V2)
View(CC)
CC  = c(Correct_1$sV1,Correct_1$sV2,Correct_2$V1,Correct_2$V2)
CC  = c(V1 = Correct_1$sV1,V2= Correct_1$sV2,V3= Correct_2$V1,V4= Correct_2$V2)
CC  = cbind(V1 = Correct_1$sV1,V2= Correct_1$sV2,V3= Correct_2$V1,V4= Correct_2$V2)
View(CC)
CC  = cbind(V1 = S_Correct_1$sV1,V2= S_Correct_1$sV2,V3= Correct_2$V1,V4= Correct_2$V2)
View(CC)
View(Correct_1)
View(Correct)
library(dplyr)
Cl_info = read.table(file='/Volumes/AhaStorage/Project/R_ETL/data/cl_info_other.csv',header=T,sep=",",stringsAsFactors=F)
Cl_info_part = select(Cl_info,data_dt,bank_nm,mortgage_bal)
#Cl_info_part2 = filter(Cl_info,mortgage_bal>1000000)
#Cl_info_part3 = filter(Cl_info,mortage = mortgage/1000000)
#Cl_info_part4 = arrange(Cl_info,mortage,desc(data_dt))
Cl_info_part5 = mutate(Cl_info,time= as.POSIXct(data_dt)) #已看過
Cl_info_part6 = group_by(Cl_info_part5,time) #先匯總
Cl_info_part7 = summarise(Cl_info_part6,
mortage_total_bal = sum(mortgage_bal, na.rm = TRUE))
GDP = read.table(file='/Volumes/AhaStorage/Project/R_ETL/data/GDP.txt',sep=",",stringsAsFactors=F,header=F)
GDP_part1 = cbind(GDP,y=1:154)
GDP_part2 = filter(GDP_part1,y>4&y<137)
colnames(GDP_part2) = c("time","GDP","GDP_yoy"
,"GDP_2006","GDP_2006_yoy",
"GDP_minus","GDP_minus_yoy","row_no")
GDP_part3= mutate(GDP_part2,GDP = as.numeric(gsub(",", "",GDP))*1000000)
GDP_part4 = mutate(GDP_part3,year=as.numeric(substr(time,0,4)),season=as.numeric(substr(time,6,6)))
GDP_part5 = select(GDP_part4,year,season,GDP)
GDP_part6 = summarise(group_by(GDP_part5,year),GDP=sum(GDP))
x=data.frame(c1 = c(1,1,2,3,4,5,5),c2 = c('A','B','C','D','E','F','G'))
y=data.frame(c1 = c(1,2,2,3,4,6,6),c2 = c('A','B','C','D','E','F','G'))
ljxy = left_join(x,y,by="c1")
ljyx = left_join(y,x,by="c1")
GDP_part7 = select(mutate(GDP_part6 , time = as.POSIXct(paste(year,'1','1',sep='-'))),time,GDP)
t1 = left_join(GDP_part7,Cl_info_part7,by="time")
t2 = filter(t1,is.na(mortage_total_bal)==FALSE)
see1 = filter(mutate(t2,ratio =mortage_total_bal/GDP),is.na(ratio)==FALSE)
library(dplyr)
Cl_info = read.table(file='/Volumes/AhaStorage/Project/R_ETL/data/cl_info_other.csv',header=T,sep=",",stringsAsFactors=F)
Cl_info_part = select(Cl_info,data_dt,bank_nm,mortgage_bal)
#Cl_info_part2 = filter(Cl_info,mortgage_bal>1000000)
#Cl_info_part3 = filter(Cl_info,mortage = mortgage/1000000)
#Cl_info_part4 = arrange(Cl_info,mortage,desc(data_dt))
Cl_info_part5 = mutate(Cl_info,time= as.POSIXct(data_dt)) #已看過
Cl_info_part6 = group_by(Cl_info_part5,time) #先匯總
Cl_info_part7 = summarise(Cl_info_part6,
mortage_total_bal = sum(mortgage_bal, na.rm = TRUE))
GDP = read.table(file='/Volumes/AhaStorage/Project/R_ETL/data/GDP.txt',sep=",",stringsAsFactors=F,header=F)
GDP_part1 = cbind(GDP,y=1:154)
GDP_part2 = filter(GDP_part1,y>4&y<137)
colnames(GDP_part2) = c("time","GDP","GDP_yoy"
,"GDP_2006","GDP_2006_yoy",
"GDP_minus","GDP_minus_yoy","row_no")
GDP_part3= mutate(GDP_part2,GDP = as.numeric(gsub(",", "",GDP))*1000000)
GDP_part4 = mutate(GDP_part3,year=as.numeric(substr(time,0,4)),season=as.numeric(substr(time,6,6)))
GDP_part5 = select(GDP_part4,year,season,GDP)
GDP_part6 = summarise(group_by(GDP_part5,year),GDP=sum(GDP))
x=data.frame(c1 = c(1,1,2,3,4,5,5),c2 = c('A','B','C','D','E','F','G'))
y=data.frame(c1 = c(1,2,2,3,4,6,6),c2 = c('A','B','C','D','E','F','G'))
ljxy = left_join(x,y,by="c1")
ljyx = left_join(y,x,by="c1")
GDP_part7 = select(mutate(GDP_part6 , time = as.POSIXct(paste(year,'1','1',sep='-'))),time,GDP)
t1 = left_join(GDP_part7,Cl_info_part7,by="time")
t2 = filter(t1,is.na(mortage_total_bal)==FALSE)
see1 = filter(mutate(t2,ratio =mortage_total_bal/GDP),is.na(ratio)==FALSE)
View(Cl_info)
View(Cl_info)
View(GDP)
View(x)
View(y)
View(see1)
library(ggplot2)
ggplot(see1, aes(time, ratio))+geom_smooth(method="loess") +
scale_size_area() +geom_point(aes(size = 20), alpha = 1/2)
View(Cl_info)
View(GDP)
library(slidify)
author(deckdir="Volumes/AhaStorage/Project/R",use_git=FALSE,open_rmd=FALSE)
library(dplyr)
Cl_info = read.table(file='/Volumes/AhaStorage/A_Project/R_ETL/data/cl_info_other.csv',header=T,sep=",",stringsAsFactors=F)
Cl_info_part = select(Cl_info,data_dt,bank_nm,mortgage_bal)
#Cl_info_part2 = filter(Cl_info,mortgage_bal>1000000)
#Cl_info_part3 = filter(Cl_info,mortage = mortgage/1000000)
#Cl_info_part4 = arrange(Cl_info,mortage,desc(data_dt))
Cl_info_part2 = mutate(Cl_info_part,time= as.POSIXct(data_dt)) #已看過
Cl_info_part3 = group_by(Cl_info_part2,time) #先匯總
Cl_info_part4 = summarise(Cl_info_part3,
mortage_total_bal = sum(mortgage_bal, na.rm = TRUE))
GDP = read.table(file='/Volumes/AhaStorage/A_Project/R_ETL/data/GDP.txt',sep=",",stringsAsFactors=F,header=F)
#GDP_part1 = cbind(GDP,y=1:154)
#GDP_part2 = filter(GDP_part1,y>4&y<137)
GDP_part1 = GDP[5:136,]
colnames(GDP_part1) = c("time","GDP","GDP_yoy"
,"GDP_2006","GDP_2006_yoy",
"GDP_minus","GDP_minus_yoy")
GDP_part2= mutate(GDP_part1,GDP = as.numeric(gsub(",", "",GDP))*1000000)
GDP_part3 = mutate(GDP_part2,year=as.numeric(substr(time,0,4)),season=as.numeric(substr(time,6,6)))
GDP_part4 = select(GDP_part3,year,season,GDP)
GDP_part5 = filter(summarise(group_by(GDP_part4,year),GDP=sum(GDP)),is.na(GDP)==FALSE)
x=data.frame(c1 = c(1,1,2,3,4,5,5),c2 = c('A','B','C','D','E','F','G'))
y=data.frame(c1 = c(1,2,2,3,4,6,6),c2 = c('A','B','C','D','E','F','G'))
ljxy = left_join(x,y,by="c1")
ljyx = left_join(y,x,by="c1")
GDP_part6 = select(mutate(GDP_part5 , time = as.POSIXct(paste(year,'1','1',sep='-'))),time,GDP)
t1 = left_join(GDP_part6,Cl_info_part4,by="time")
t2 = filter(t1,is.na(mortage_total_bal)==FALSE)
see1 = filter(mutate(t2,ratio =mortage_total_bal/GDP),is.na(ratio)==FALSE)
View(Cl_info_part)
View(Cl_info)
str(Cl_info)
View(Cl_info)
slidify("index.Rmd");publish(user = "ntuaha", repo = "R_ETL_LAB", host = 'github')
slidify("index.Rmd");publish(user = "ntuaha", repo = "R_ETL_LAB", host = 'github')
A = select(Cl_info,date_dt,bank_nm,mortgage_bal)
A = select(Cl_info,data_dt,bank_nm,mortgage_bal)
View(A)
slidify("index.Rmd");publish(user = "ntuaha", repo = "R_ETL_LAB", host = 'github')
Cl_demo2 = filter(Cl_info,mortgage_bal>1000000)
View(Cl_demo2)
slidify("index.Rmd");publish(user = "ntuaha", repo = "R_ETL_LAB", host = 'github')
Cl_demo3 = filter(Cl_info,mortage = mortgage/1000000)
Cl_demo3 = filter(Cl_info,mortage = mortagage/1000000)
Cl_demo3 = filter(Cl_info,mortage = mortage/1000000)
Cl_demo3 = filter(Cl_info,mortage = mortgage/1000000)
View(Cl_info)
Cl_demo3 = filter(Cl_info,mortage = mortgage_bal/1000000)
Cl_demo3 = mutate(Cl_info,mortage = mortgage_bal/1000000)
View(Cl_demo3)
B = filter(Cl_demo3,bank_nm,mortage)
B = select(Cl_demo3,bank_nm,mortage)
View(B)
Cl_demo4 = arrange(Cl_info,mortage,desc(data_dt))
Cl_demo4 = arrange(Cl_info,mortgage,desc(data_dt))
Cl_demo4 = arrange(Cl_info,mortage_bal,desc(data_dt))
Cl_demo4 = arrange(Cl_info,mortgage_bal,desc(data_dt))
View(Cl_demo4)
View(select(Cl_demo4,bank_nm,mortgage_bal,data_dt))
slidify("index.Rmd");publish(user = "ntuaha", repo = "R_ETL_LAB", host = 'github')
slidify("index.Rmd");publish(user = "ntuaha", repo = "R_ETL_LAB", host = 'github')
View(GDP_part1)
View(Cl_info_part2)
View(Cl_info_part4)
slidify("index.Rmd");publish(user = "ntuaha", repo = "R_ETL_LAB", host = 'github')
slidify("index.Rmd");publish(user = "ntuaha", repo = "R_ETL_LAB", host = 'github')
Cl_info_part5 = group_by(Cl_info_part4,data_dt) #先匯總
View(Cl_info_part4)
Cl_info_part2 = mutate(Cl_info_part,time= as.POSIXct(data_dt))
Cl_info_part3 = group_by(Cl_info_part2,time)  #先匯總
Cl_info_part4 = summarise(Cl_info_part3,
mortage_total_bal = sum(mortgage_bal, na.rm = TRUE))
GDP_part5 = summarise(group_by(GDP_part4,year),GDP=sum(GDP))
View(GDP_part5)
slidify("index.Rmd");publish(user = "ntuaha", repo = "R_ETL_LAB", host = 'github')
slidify("index.Rmd");publish(user = "ntuaha", repo = "R_ETL_LAB", host = 'github')
slidify("index.Rmd");publish(user = "ntuaha", repo = "R_ETL_LAB", host = 'github')
slidify("index.Rmd");publish(user = "ntuaha", repo = "R_ETL_LAB", host = 'github')
slidify("index.Rmd");publish(user = "ntuaha", repo = "R_ETL_LAB", host = 'github')
slidify("index.Rmd");publish(user = "ntuaha", repo = "R_ETL_LAB", host = 'github')
